function [Lx, Fx, delta] = interpolate1(a, b, size, xx)
% Вспомогательная функция интерполяции (+ расчет весторов X и Y)
% Передаем в функцию границы отрезка a и b, степень полинома (Многочлен 
% степени 2 = число узлов 3) и значение xx, для которого ищем y

d = abs(a-b)/size; % Расстояние между узлами, size - степень полинома
X = a:d:b; % Формируем вектор X
Y = f(X); % Заполняем вектор Y Иcпользуем функцию, прописанную в файле f.m

coef = polyfit(X, Y, size); % Вычисляем коэффициенты интерполяционного полинома
Lx = polyval(coef, xx); % Вычисляем значение в точке xx по найденному полиному
Fx = f(xx); % Вычисляем значение функции в точке xx
delta = abs(Lx - Fx); % Вычисляем ошибку

% Дальше будем строить графики:
xlabel('x'); ylabel('y'); hold on; grid on; % Подписываем оси, включаем сетку

plot (X, Y, 'ro'); % Печатаем узловые точки

XX = a:0.01:b; % Формируем точки для графика многочлена Лагранжа
LX = polyval(coef, XX); % И соответствующие им Y-ки
plot(XX, LX, 'b--'); % Печатаем график полинома (интерполирующей функции)

plot(xx, Lx, 'go'); % Печатаем точку полинома

plot(xx, Fx, 'rx'); % Печатаем точку функции

% И подписываем оси и легенду:
title('Полиномиальная интерполяция', 'FontName', 'Courier');
h1 = legend('Узловые точки', 'Интерполяция', 'Точка полинома', 'Точка функции');
set(h1, 'FontName', 'Courier');

end